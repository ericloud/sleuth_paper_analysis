include: '../config.py'

from os.path import isfile

N_THREADS = 9

def get_sample_ids(fname):
    ret = []
    with open(fname, 'r') as fhandle:
        for line in fhandle:
            ret.append(line.strip("\n"))
    return ret

META = 'metadata/hiseq_accession.txt'

SRA_PAIRED = []
if isfile(META):
    SRA_PAIRED = get_sample_ids(META)

rule all:
    input:
        META,
        expand('results/paired/{id}/kallisto/abundance.h5', id = SRA_PAIRED),
        expand('results/paired/{id}/featureCounts.txt', id = SRA_PAIRED)

rule metadata:
    output:
        META,
        "metadata/hiseq_accession.txt"
    shell:
        source_r('R', 'get_sample_info.R')

rule fastq_dump_paired:
    input:
        META,
        "metadata/hiseq_accession.txt"
    output:
        'data/paired/{id}',
        'data/paired/{id}/{id}_1.fastq.gz',
        'data/paired/{id}/{id}_2.fastq.gz'
    threads: 1
    shell:
        'fastq-dump'
        ' --split-files'
        ' -O {output[0]}'
        ' --gzip'
        ' {wildcards.id}'

rule kallisto_paired:
    input:
        'data/paired/{id}/{id}_1.fastq.gz',
        'data/paired/{id}/{id}_2.fastq.gz'
    output:
        'results/paired/{id}/kallisto',
        'results/paired/{id}/kallisto/abundance.h5'
    threads: 1
    shell:
        '{UPDATED_PATH} '
        'kallisto quant'
        ' -i {KALLISTO_INDEX}'
        ' -b 30'
        ' -t 7'
        ' -o {output[0]}'
        ' {input[0]} {input[1]}'

rule hisat_alignment:
    input:
        'data/paired/{id}/{id}_1.fastq.gz',
        'data/paired/{id}/{id}_2.fastq.gz'
    output:
        'results/paired/{id}/hisat.bam'
    threads: 20
    shell:
        '{UPDATED_PATH}'
        ' hisat2'
        ' -x {HISAT_INDEX}'
        ' -1 {input[0]}'
        ' -2 {input[1]}'
        ' --dta-cufflinks'
        ' -p {threads}'
        ' | '
        '{UPDATED_PATH} samtools view -Sb -'
        ' > '
        '{output}.unsorted'
        ' && '
        '{UPDATED_PATH} samtools sort'
        ' -o {output}'
        ' {output}.unsorted'
        ' && '
        'rm {output}.unsorted'

rule featureCounts:
    input:
        'results/paired/{id}/hisat.bam'
    output:
        'results/paired/{id}/featureCounts.txt'
    threads: 5
    shell:
        '{UPDATED_PATH} '
        'featureCounts '
        ' -a {TRANSCRIPTOME_GTF}'
        ' -o {output}'
        ' -T {threads}'
        ' -p'
        ' {input}'
