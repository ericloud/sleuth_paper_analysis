N_THREADS = 35

ANNO = "../annotation"
ANNO_PRE = "Homo_sapiens.GRCh38.rel80.cdna.all"

ANNO_FA = "{0}/{1}.fa".format( ANNO, ANNO_PRE )
BWT_IDX = "../index/{0}".format( ANNO_PRE )

RSEM_ANNO = "../index/Homo_sapiens.GRCh38.rel80.cdna.all_rsem/ref"
RSEM_MODEL = 'results/rsem/HG00365_7/out.stat/out.model'

def source_r(base, fname):
    return 'Rscript --vanilla --default-packages=methods,stats,utils -e \'setwd("{0}")\' -e \'source("{1}")\''.format(base, fname)

KALLISTO = '/home/hjp/dev_versions/kallisto_elen'
KAL_IDX = '../index/Homo_sapiens.GRCh38.rel80.cdna.all.kidx'

rule all:
    input:
        'metadata/geu_meta.RData',
        'results/prep_fin.RData',
        'sims/3_3_1_1_1/de_info.tsv.gz',
        expand('results/3_3_1_1_1/exp_1/{idx}/kallisto/abundance.h5',
           idx = range(1, 7)),
        'sims/3_3_1_1_2/de_info.tsv.gz',
        expand('results/3_3_1_1_2/exp_1/{idx}/kallisto/abundance.h5',
           idx = range(1, 7))

        #'results/prep_fin_lnorm.RData',
        # 'sims/3_3_1_1/de_info.tsv.gz',
        # 'sims/norm/3_3_1_1/de_info.tsv.gz',
        # #expand('sims/3_3_1_1/sample_1/{idx}/kallisto/abundance.h5',
        # #    idx = range(1, 7))
        # #expand('sims/norm/3_3_1_1/sample_1/{idx}/kallisto/abundance.h5',
        # #    idx = range(1, 7)),
        # expand('sims/3_3_1_1/sample_1/{idx}/kallisto/abundance.h5',
        #     idx = range(1, 7)),
        # expand('results/3_3_1_1/sample_1/{id}/alignments/bwt_bitseq.bam', id = range(1,7)),
        # #expand('results/3_3_1_1/sample_1/{id}/bitseq/results.RData', id = range(1,7))
        # expand('results/3_3_1_1/sample_1/{id}/bitseq/bitseq.rpkm', id = range(1,7))
        # #'sims/3_3_10_1/de_info.tsv.gz'

rule geuvadis_metadata:
    output:
        'metadata/geu_meta.RData'
    shell:
        source_r('R', 'metadata.R')

rule prep_finnish_samples:
    input:
        'metadata/geu_meta.RData'
    output:
        'results/prep_fin.RData'
    shell:
        source_r('R', 'mean_disp_pairs.R')

# rule prep_finnish_samples_lnorm:
#     input:
#         'results/prep_fin.RData'
#     output:
#         'results/prep_fin_lnorm.RData'
#     shell:
#         source_r('R', 'mean_var_lnorm_pairs.R')

rule gen_sim_script:
    input:
        'results/prep_fin.RData'
    output:
        'sims/{n_a,\d+}_{n_b}_{n_sim}_{seed,\d+}_{sf,\d+}',
        'sims/{n_a,\d+}_{n_b}_{n_sim}_{seed}_{sf}/de_info.tsv.gz'
    shell:
        source_r('R', 'gen_sim.R') + ' '
        '{wildcards.n_a}_{wildcards.n_b}_{wildcards.n_sim}_{wildcards.seed}_{wildcards.sf} '
        '{wildcards.n_sim} '
        '{wildcards.n_a} '
        '{wildcards.n_b} '
        '{wildcards.seed} '
        '{wildcards.sf}'

rule make_sim:
    input:
        'sims/{n_a,\d+}_{n_b}_{n_sim}_{seed,\d+}_{sf,\d+}',
        'sims/{n_a,\d+}_{n_b}_{n_sim}_{seed}_{sf}/de_info.tsv.gz'
    output:
        'sims/{n_a}_{n_b}_{n_sim}_{seed}_{sf}/exp_{num}/{id}/sim_{id}_1.fq.gz',
        'sims/{n_a}_{n_b}_{n_sim}_{seed}_{sf}/exp_{num}/{id}/sim_{id}_2.fq.gz'
    params:
        sims = 'sims/{n_a}_{n_b}_{n_sim}_{seed}_{sf}/exp_{num}/{id}'
    shell:
        '{params.sims}/sim_{wildcards.id}.sh '
        '{RSEM_ANNO} '
        '{RSEM_MODEL} '
        '{params.sims}'

rule gen_sim_script_norm:
    input:
        'results/prep_fin.RData'
    output:
        'sims/norm/{n_a,\d+}_{n_b}_{n_sim}_{seed,\d+}',
        'sims/norm/{n_a,\d+}_{n_b}_{n_sim}_{seed}/de_info.tsv.gz'
    shell:
        source_r('R', 'gen_sim_norm.R') + ' '
        'norm/{wildcards.n_a}_{wildcards.n_b}_{wildcards.n_sim}_{wildcards.seed} '
        '{wildcards.n_sim} '
        '{wildcards.n_a} '
        '{wildcards.n_b} '
        '{wildcards.seed}'

rule kallisto:
    input:
        'sims/{n_a}_{n_b}_{n_sim}_{seed}_{sf}/exp_{num}/{id}/sim_{id}_1.fq.gz',
        'sims/{n_a}_{n_b}_{n_sim}_{seed}_{sf}/exp_{num}/{id}/sim_{id}_2.fq.gz'
    output:
        'results/{n_a}_{n_b}_{n_sim}_{seed}_{sf}/exp_{num}/{id}/kallisto',
        'results/{n_a}_{n_b}_{n_sim}_{seed}_{sf}/exp_{num}/{id}/kallisto/abundance.h5'
    params:
        sims = 'results/{n_a}_{n_b}_{n_sim}_{seed}_{sf}/exp_{num}/{id}'
    threads:
        7
    shell:
        '{KALLISTO} quant '
        '-i {KAL_IDX} '
        '-b 100 '
        '-t {threads} '
        '-o {output[0]} '
        '{input[0]} '
        '{input[1]}'
        #'{params.sims}/sim_{wildcards.id}_1.fq.gz '
        #'{params.sims}/sim_{wildcards.id}_2.fq.gz'


rule kallisto_norm:
    input:
        'sims/norm/{n_a}_{n_b}_{n_sim}_{seed}/de_info.tsv.gz'
    output:
        'sims/norm/{n_a}_{n_b}_{n_sim}_{seed}/sample_{num}/{id}',
        'sims/norm/{n_a}_{n_b}_{n_sim}_{seed}/sample_{num}/{id}/kallisto',
        'sims/norm/{n_a}_{n_b}_{n_sim}_{seed}/sample_{num}/{id}/kallisto/abundance.h5'
    threads:
        7
    shell:
        '{KALLISTO} quant '
        '-i {KAL_IDX} '
        '-b 100 '
        '-t {threads} '
        '-o {output[1]} '
        '{output[0]}/sim_{wildcards.id}_1.fq.gz '
        '{output[0]}/sim_{wildcards.id}_2.fq.gz'

########################################################################
# bowtie alignments
########################################################################

rule bowtie_bitseq:
    input:
        'sims/{n_a}_{n_b}_{n_sim}_{seed}/de_info.tsv.gz'
    output:
        'results/{n_a}_{n_b}_{n_sim}_{seed}/sample_{num}/{id}/alignments/bwt_bitseq.bam'
    params:
        sims = 'sims/{n_a}_{n_b}_{n_sim}_{seed}/sample_{num}/{id}'
    threads:
        N_THREADS
    shell:
        'bowtie '
        '-q '
        '-v 3 '
        '-3 0 '
        '-p {threads} '
        '-m 100 '
        '--sam '
        '--seed 37 '
        '{BWT_IDX} '
        '-1 <(zcat {params.sims}/sim_{wildcards.id}_1.fq.gz) '
        '-2 <(zcat {params.sims}/sim_{wildcards.id}_2.fq.gz) | '
        'samtools view -Sb - > {output[0]}'

rule bowtie_rsem:
    input:
        'sims/{n_a}_{n_b}_{n_sim}_{seed}/de_info.tsv.gz'
    output:
        'results/{n_a}_{n_b}_{n_sim}_{seed}/sample_{num}/{id}/alignments/bwt_rsem.bam'
    params:
        sims = 'sims/{n_a}_{n_b}_{n_sim}_{seed}/sample_{num}/{id}'
    threads:
        N_THREADS
    shell:
        'bowtie '
        '-q '
        '-n 2 '
        '-e 99999999 '
        '-m 200 '
        '-I 1 '
        '-X 1000 '
        '-p {threads} '
        '--sam '
        '--seed 37 '
        '{BWT_IDX} '
        '-1 <(zcat {params.sims}/sim_{wildcards.id}_1.fq.gz) '
        '-2 <(zcat {params.sims}/sim_{wildcards.id}_2.fq.gz) | '
        'samtools view -Sb - > {output[0]}'

rule bitseq:
    input:
        'results/{n_a}_{n_b}_{n_sim}_{seed}/sample_{num}/{id,\d+}/alignments/bwt_bitseq.bam'
    output:
        'results/{n_a}_{n_b}_{n_sim}_{seed}/sample_{num}/{id}/bitseq',
        'results/{n_a}_{n_b}_{n_sim}_{seed}/sample_{num}/{id}/bitseq/bitseq.rpkm'
    benchmark:
        'benchmarks/{n_a}_{n_b}_{n_sim}_{seed}/sample_{num}/{id}/bitseq.json'
    threads: 1
    shell:
        source_r('R', 'run_bitseq.R') +
        ' bitseq_{wildcards.id} ../{output[0]}/bitseq ../{input} ../{ANNO_FA}'

rule rsem:
    input:
        'results/{n_a}_{n_b}_{n_sim}_{seed}/sample_{num}/{id,\d+}/alignments/bwt_rsem.bam'
    params:
        base = 'results/{n_a}_{n_b}_{n_sim}_{seed}/sample_{num}/{id}/rsem/out'
    output:
        'results/{n_a}_{n_b}_{n_sim}_{seed}/sample_{num}/{id}/rsem/out.isoforms.results'
    threads: N_THREADS
    shell:
        'rsem-calculate-expression '
        '--bam '
        '--paired-end '
        '--no-bam-output '
        '-p {threads} '
        '{input} '
        '{RSEM_ANNO} '
        '{params.base}'
